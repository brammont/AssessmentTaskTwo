//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAstroContract")]
    public interface IAstroContract
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstroContract/CalculateStarVelocity", ReplyAction="http://tempuri.org/IAstroContract/CalculateStarVelocityResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CalculateStarVelocityResponse> CalculateStarVelocityAsync(ServiceReference1.CalculateStarVelocityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstroContract/CalculateStarDistance", ReplyAction="http://tempuri.org/IAstroContract/CalculateStarDistanceResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CalculateStarDistanceResponse> CalculateStarDistanceAsync(ServiceReference1.CalculateStarDistanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstroContract/ConvertToKelvin", ReplyAction="http://tempuri.org/IAstroContract/ConvertToKelvinResponse")]
        System.Threading.Tasks.Task<ServiceReference1.ConvertToKelvinResponse> ConvertToKelvinAsync(ServiceReference1.ConvertToKelvinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAstroContract/CalculateEventHorizon", ReplyAction="http://tempuri.org/IAstroContract/CalculateEventHorizonResponse")]
        System.Threading.Tasks.Task<ServiceReference1.CalculateEventHorizonResponse> CalculateEventHorizonAsync(ServiceReference1.CalculateEventHorizonRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateStarVelocity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalculateStarVelocityRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double observedWavelength;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public double restWavelength;
        
        public CalculateStarVelocityRequest()
        {
        }
        
        public CalculateStarVelocityRequest(double observedWavelength, double restWavelength)
        {
            this.observedWavelength = observedWavelength;
            this.restWavelength = restWavelength;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateStarVelocityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalculateStarVelocityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double CalculateStarVelocityResult;
        
        public CalculateStarVelocityResponse()
        {
        }
        
        public CalculateStarVelocityResponse(double CalculateStarVelocityResult)
        {
            this.CalculateStarVelocityResult = CalculateStarVelocityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateStarDistance", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalculateStarDistanceRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double parallaxAngle;
        
        public CalculateStarDistanceRequest()
        {
        }
        
        public CalculateStarDistanceRequest(double parallaxAngle)
        {
            this.parallaxAngle = parallaxAngle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateStarDistanceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalculateStarDistanceResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double CalculateStarDistanceResult;
        
        public CalculateStarDistanceResponse()
        {
        }
        
        public CalculateStarDistanceResponse(double CalculateStarDistanceResult)
        {
            this.CalculateStarDistanceResult = CalculateStarDistanceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToKelvin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConvertToKelvinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double celsius;
        
        public ConvertToKelvinRequest()
        {
        }
        
        public ConvertToKelvinRequest(double celsius)
        {
            this.celsius = celsius;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToKelvinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConvertToKelvinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double ConvertToKelvinResult;
        
        public ConvertToKelvinResponse()
        {
        }
        
        public ConvertToKelvinResponse(double ConvertToKelvinResult)
        {
            this.ConvertToKelvinResult = ConvertToKelvinResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateEventHorizon", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalculateEventHorizonRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double blackHoleMass;
        
        public CalculateEventHorizonRequest()
        {
        }
        
        public CalculateEventHorizonRequest(double blackHoleMass)
        {
            this.blackHoleMass = blackHoleMass;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateEventHorizonResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalculateEventHorizonResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public double CalculateEventHorizonResult;
        
        public CalculateEventHorizonResponse()
        {
        }
        
        public CalculateEventHorizonResponse(double CalculateEventHorizonResult)
        {
            this.CalculateEventHorizonResult = CalculateEventHorizonResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IAstroContractChannel : ServiceReference1.IAstroContract, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class AstroContractClient : System.ServiceModel.ClientBase<ServiceReference1.IAstroContract>, ServiceReference1.IAstroContract
    {
        
        public AstroContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CalculateStarVelocityResponse> CalculateStarVelocityAsync(ServiceReference1.CalculateStarVelocityRequest request)
        {
            return base.Channel.CalculateStarVelocityAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CalculateStarDistanceResponse> CalculateStarDistanceAsync(ServiceReference1.CalculateStarDistanceRequest request)
        {
            return base.Channel.CalculateStarDistanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ConvertToKelvinResponse> ConvertToKelvinAsync(ServiceReference1.ConvertToKelvinRequest request)
        {
            return base.Channel.ConvertToKelvinAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CalculateEventHorizonResponse> CalculateEventHorizonAsync(ServiceReference1.CalculateEventHorizonRequest request)
        {
            return base.Channel.CalculateEventHorizonAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
    }
}
